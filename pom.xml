<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example.jshort</groupId>
    <artifactId>jshort</artifactId>
    <version>1.0-SNAPSHOT</version>


    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <version>RELEASE</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>5.4.0.Final</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>5.4.0.Final</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.10.1</version>
        </dependency>
        <dependency>
            <groupId>org.jadira.usertype</groupId>
            <artifactId>usertype.core</artifactId>
            <version>7.0.0.CR1</version>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>6.10</version>
        </dependency>

        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>2.4.1</version>
        </dependency>

        <dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.1-901-1.jdbc4</version>
        </dependency>


        <dependency>
            <groupId>com.jayway.restassured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>2.4.1</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>RELEASE</version>
        </dependency>
    </dependencies>

    <properties>
        <maven.compiler.source>1.6</maven.compiler.source>
        <maven.compiler.target>1.6</maven.compiler.target>
        <java.version>1.8</java.version>
        <docker.buildArg.JAR_FILE>${project.build.finalName}.jar</docker.buildArg.JAR_FILE>
        <postgres.host>172.17.0.2</postgres.host>
        <postgres.user>postgres</postgres.user>
        <postgres.password>111</postgres.password>
        <postgres.dbname>jshortdb</postgres.dbname>
        <docker.buildArg.pgpswd>${postgres.password}.jar</docker.buildArg.pgpswd>
    </properties>


    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>

    <profiles>
        <profile>
            <id>init-database</id>
            <activation>
                <property><name>!fake.property</name></property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>

                        <dependencies>
                            <dependency>
                                <groupId>postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>9.1-901-1.jdbc4</version>
                            </dependency>
                        </dependencies>

                        <configuration>
                            <driver>org.postgresql.Driver</driver>
                            <url>jdbc:postgressql://${postgres.host}</url>
                            <username>${postgres.user}</username>
                            <password>${postgres.password}</password>
                            <settingsKey>sensibleKey</settingsKey>
                        </configuration>

                        <executions>
                            <execution>
                                <id>prepare-db</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <url>jdbc:postgresql://${postgres.host}</url>
                                    <!-- no transaction -->
                                    <autocommit>true</autocommit>
                                    <srcFiles>
                                        <srcFile>${project.build.outputDirectory}/sql/preparedb.sql</srcFile>
                                    </srcFiles>
                                </configuration>
                            </execution>
                            <execution>
                                <id>create-db</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <url>jdbc:postgresql://${postgres.host}/${postgres.dbname}</url>
                                    <!-- no transaction -->
                                    <autocommit>true</autocommit>
                                    <srcFiles>
                                        <srcFile>${project.build.outputDirectory}/sql/createdb.sql</srcFile>
                                    </srcFiles>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>functional-tests</id>
            <activation>
                <property><name>!fake.property</name></property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>3.0.0-M2</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <additionalClasspathElements>
                                <additionalClasspathElement>
                                    ${project.build.outputDirectory}
                                </additionalClasspathElement>
                            </additionalClasspathElements>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>create-images</id>
            <activation>
                <property><name>!fake.property</name></property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.28.0</version>
                        <executions>
                            <execution>
                                <id>docker postgres</id>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <phase>prepare-package</phase>
                                <configuration>
                                    <images>
                                        <image>
                                            <name>jshort/postgres:${project.version}</name>
                                            <build>
                                                <dockerFileDir>${project.basedir}</dockerFileDir>
                                                <dockerFile>DockerfilePostgres</dockerFile>
                                            </build>
                                            <run>
                                                <ports>
                                                    <port>it-database.port:5432</port>
                                                </ports>

                                                <wait>
                                                    <tcp>
                                                        <ports>
                                                            <port>5432</port>
                                                        </ports>
                                                    </tcp>
                                                    <time>10000</time>
                                                </wait>
                                            </run>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                            <execution>
                                <id>docker java</id>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <phase>pre-integration-test</phase>
                                <configuration>
                                    <images>
                                        <image>
                                            <name>jshort/image:${project.version}</name>
                                            <build>
                                                <dockerFileDir>${project.basedir}</dockerFileDir>
                                                <dockerFile>DockerfileJava</dockerFile>
                                            </build>
                                            <run>
                                                <ports>
                                                    <port>8080:8080</port>
                                                </ports>

                                                <wait>
                                                    <http>
                                                        <url>http://localhost:8080/short</url>
                                                        <method>GET</method>
                                                        <status>405</status>
                                                    </http>
                                                    <time>10000</time>
                                                </wait>
                                            </run>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>start-images</id>
            <activation>
                <property><name>!fake.property</name></property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.28.0</version>
                        <executions>
                            <execution>
                                <id>docker postgres</id>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <phase>prepare-package</phase>
                                <configuration>
                                    <images>
                                        <image>
                                            <name>jshort/postgres:${project.version}</name>
                                            <build>
                                                <dockerFileDir>${project.basedir}</dockerFileDir>
                                                <dockerFile>DockerfilePostgres</dockerFile>
                                            </build>
                                            <run>
                                                <ports>
                                                    <port>it-database.port:5432</port>
                                                </ports>

                                                <wait>
                                                    <tcp>
                                                        <ports>
                                                            <port>5432</port>
                                                        </ports>
                                                    </tcp>
                                                    <time>10000</time>
                                                </wait>
                                            </run>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                            <execution>
                                <id>docker java</id>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <phase>pre-integration-test</phase>
                                <configuration>
                                    <images>
                                        <image>
                                            <name>jshort/image:${project.version}</name>
                                            <build>
                                                <dockerFileDir>${project.basedir}</dockerFileDir>
                                                <dockerFile>DockerfileJava</dockerFile>
                                            </build>
                                            <run>
                                                <ports>
                                                    <port>8080:8080</port>
                                                </ports>

                                                <wait>
                                                    <http>
                                                        <url>http://localhost:8080/short</url>
                                                        <method>GET</method>
                                                        <status>405</status>
                                                    </http>
                                                    <time>10000</time>
                                                </wait>
                                            </run>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                            <execution>
                                <id>docker stop</id>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                                <phase>post-integration-test</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>


</project>